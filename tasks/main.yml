# vim: ai et ts=2 st=2 sw=2 :
---
- name: check if we're running supported os
  assert:
    fail_msg: "{{ role_name }} only supports ubuntu versions 12, 14, 16, 18, 20, centos versions 6, 7, 8 and rhel version 8!"
    success_msg: "{{ role_name }} supports {{ ansible_distribution }} version {{ ansible_distribution_version }}"
    quiet: "{{ not ansible_check_mode }}"
    that:
      ( ansible_distribution == "Ubuntu" and ansible_distribution_version|int in [12, 14, 16, 18, 20] )
      or ( ansible_distribution == "CentOS" and ansible_distribution_major_version|int in [6, 7, 8] )
      or ( ansible_distribution == "RedHat" and ansible_distribution_major_version|int in [8] )

- name: check if dockerd is running
  command:
    argv:
      - service
      - docker
      - status
    warn: false
  register: docker_running
  failed_when: false
  changed_when: false
  check_mode: false

- name: set variable if docker is running
  set_fact:
    is_docker: "{{ docker_running.rc == 0 }}"

- name: check if neutron is loaded
  shell: "set -o pipefail && iptables-save | grep ':neutron'"
  args:
    executable: bash
  register: neutron_loaded
  changed_when: false
  failed_when: false
  check_mode: false

- name: set variable if neutron is loaded
  set_fact:
    is_neutron_loaded: "{{ neutron_loaded.rc == 0 }}"

- name: turn off ufw and firewalld
  include: "{{ ansible_os_family | lower }}.yml"

- name: set ipv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "{{ 1 if firewall_enable_ipv4_forward else 0 }}"

- name: set ipv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "{{ 1 if firewall_enable_ipv6_forward else 0 }}"
