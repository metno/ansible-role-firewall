# vim: ai et ts=2 st=2 sw=2 :
---
- name: set name of iptables service ubuntu < 16
  set_fact:
    iptables_service_name: iptables-persistent
  when: ansible_distribution_version|int < 16

- name: set name of iptables service ubuntu >= 16
  set_fact:
    iptables_service_name: netfilter-persistent
  when: ansible_distribution_version|int >= 16

- name: check if ufw package is installed (on debian)
  shell: dpkg --get-selections ufw | grep install
  args:
    warn: false
  register: ufw_installed
  ignore_errors: true
  changed_when: false
  when:
    - firewall_disable_ufw

- name: disable the ufw firewall (on debian, if configured)
  service:
    name: ufw
    state: stopped
    enabled: false
  when:
    - firewall_disable_ufw
    - ufw_installed.rc == 0

- name: add persistance for iptables
  apt:
    name:
      - iptables
      - iptables-persistent
    force_apt_get: true
    update_cache: yes
    cache_valid_time: "{{ 3600 * 3 }}"

- name: start iptables on boot ubuntu < 16
  service:
    name: "{{ iptables_service_name }}"
    enabled: "{{ firewall_enable_on_boot }}"

- name: iptables templates
  template:
    src: "{{ item.0 }}.j2"
    dest: "/etc/iptables/{{ item.1 }}"
    owner: root
    group: root
    mode: 0600
    #validate: bash -c 'cat %s | /sbin/{{ item.0 }}-restore --test'
  loop:
    - - iptables
      - rules.v4
    - - ip6tables
      - rules.v6
  register: iptables_templates

- name: reload iptables
  service:
    name: "{{ iptables_service_name }}"
    state: restarted
  when: iptables_templates is changed
